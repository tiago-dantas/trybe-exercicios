// ğŸš€ Modifique a variÃ¡vel para que respeite o escopo onde estÃ¡ sendo declarada. Lembre-se: para que a variÃ¡vel respeite o escopo, ela nÃ£o deve ser acessÃ­vel fora do escopo em que esteja sendo declarada.

function imprimeIdade() {
    for (let idade = 30; idade <= 40; idade += 1) {
      console.log('Idade dentro do for:', idade)
    }    
  }
  imprimeIdade()

// ğŸš€ Altere o valor das propriedades do objeto, para que respeite as caracterÃ­sticas da variÃ¡vel do tipo const;

// Executando esse cÃ³digo iremos receber um erro `TypeError: Assignment to constant variable.`
  const pessoa = {
    nome: 'Henri',
    idade: 20
  }
    pessoa.nome = 'Luna',
    pessoa.idade = 19;
  
  console.log('Nome:', pessoa.nome);
  console.log('Idade:', pessoa.idade);

// ğŸš€ Modifique a variÃ¡vel para que nÃ£o ocorra Erro

let favoriteFood = 'Lasanha';
favoriteFood = 'Hamburguer';
console.log(favoriteFood);

// ğŸš€ Modifique as concatenaÃ§Ãµes para template literals.

const nameb = 'Adriana';
const lastName = 'Soares';
console.log(`OlÃ¡ ${nameb} ${lastName}!`);
function soma(a,b) {
  let resultado = a + b;
  return resultado;
}
let a = 3;
let b = 5;
console.log(`O resultado da soma de ${a} + ${b} Ã©: ${soma(a,b)}`);

// ğŸš€ Modifique a estrutura das funÃ§Ãµes a seguir para que elas sejam arrow functions;

// ğŸš€ Transforme a funÃ§Ã£o numeroAleatorio em uma arrow function;

const numeroAleatorio = () => Math.random();
  
  console.log(numeroAleatorio());

// ğŸš€ Transforme a funÃ§Ã£o hello em uma arrow function;

const hello = (nomeb) => `OlÃ¡, ${nomeb}!`

    let nome = 'Ivan';
  console.log(hello(nome));

// ğŸš€ Transforme a funÃ§Ã£o nomeCompleto em uma arrow function;

const nomeCompleto = (nomeb2, sobrenomeb2) => `${nomeb2} ${sobrenomeb2}`;
  
    let nomeb2 = 'Ivan';
    let sobrenomeb2 = 'Pires';
    console.log(nomeCompleto(nomeb2, sobrenomeb2));

// ğŸš€ Altere a expressÃ£o if/else utilizando ternary operator;

let speed = 90;
const speedCar = (speed) => (
  speed >= 120 ? `VocÃª ultrapassou o limite de velocidade`: `VocÃª estÃ¡ na velocidade permitida`
  );
console.log(speedCar(speed));

// ============================================ //

let motor = true;

const ligarDesligar = () => (
    motor === true ? `O motor estÃ¡ ligado` : `O motor estÃ¡ desligado`    
    )
    console.log(ligarDesligar(motor));

// ğŸš€ Crie uma funÃ§Ã£o que calcule a Ã¡rea de um cÃ­rculo.

// Na matemÃ¡tica, a fÃ³rmula para calcular a Ã¡rea de um cÃ­rculo Ã©: Ã¡rea = PI vezes o raio elevado ao quadrado.

// Com base nessa informaÃ§Ã£o:

// Crie a funÃ§Ã£o circleArea, que recebe o valor do raio como parÃ¢metro, utilizando arrow functions;
    const circleArea = (raio) => {
        let piValue = 3.14;
        let area = piValue * raio * raio;
        return area
    };
    
    console.log(`Essa Ã© a Ã¡rea do cÃ­rculo: ${circleArea(3)}`);

    // ğŸš€ Crie uma funÃ§Ã£o que receba uma frase como parÃ¢metro e retorne a maior palavra da frase.

let txtWord = ('AntÃ´nio foi no banheiro e nÃ£o sabemos o que aconteceu') // retorna 'aconteceu'

const longestWord = (text) => {
    let bWord = 0;
    for (let t of text) {
        if (t > bWord) {
            bWord = t;
        }
        return bWord
    }

}
